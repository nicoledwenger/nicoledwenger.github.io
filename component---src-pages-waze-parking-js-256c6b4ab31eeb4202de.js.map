{"version":3,"sources":["webpack:///./src/pages/WazeParking.js","webpack:///./src/components/text/CallToAction.js"],"names":["ProjectContainer","styled","div","breakpoints","mobileMax","HeroContainer","HeroSegement","Container","ImageContainer","Paragraph","ButtonContainer","WazeParking","data","title","fluid","featuredImgFluid","childImageSharp","style","boxShadow","alt","marginTop","href","color","icons","fontFamily","wireframe","homePage","otherPage","marginBottom","to","prevProject","nextProject","query","fullPageImages","otherProjects","CallToAction","h3"],"mappings":"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","file":"component---src-pages-waze-parking-js-256c6b4ab31eeb4202de.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\nimport Heading from \"../components/text/Heading\"\nimport styled from \"styled-components\"\nimport { breakpoints } from \"../components/Breakpoints\"\nimport Paragraph from \"../components/text/Paragraph\"\nimport WorkSubHeading from \"../components/text/WorkSubHeading\"\nimport CallToAction from \"../components/text/CallToAction\"\nimport SEO from \"../components/seo\"\nimport Button from \"../components/UI/Button\"\nimport RoleTable from \"../components/UI/RoleTable\"\n\nconst ProjectContainer = styled.div`\n  width: 100%;\n  margin-top: 80px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-end;\n\n  @media (max-width: ${breakpoints.mobileMax}) {\n    display: block;\n    flex-wrap: nowrap;\n  }\n`\n\nconst HeroContainer = styled.div`\n  width: 100vw;\n  margin-top: 8%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n\n  @media (max-width: ${breakpoints.mobileMax}) {\n    display: block;\n    flex-wrap: nowrap;\n    margin-top: 15%;\n  }\n`\n\nconst HeroSegement = styled.div`\n  margin-bottom: 80px;\n  transition-duration: 0.3s;\n\n  :nth-child(1) {\n    width: 55%;\n    margin-right: 50px;\n\n    @media (max-width: ${breakpoints.mobileMax}) {\n      width: 100%;\n      margin-bottom: 20px;\n    }\n  }\n\n  :nth-child(2) {\n    width: 30%;\n\n    @media (max-width: ${breakpoints.mobileMax}) {\n      width: 100%;\n      margin-left: 20px;\n    }\n  }\n`\n\nconst Container = styled.div`\n  width: 48%;\n  margin-bottom: 80px;\n  transition-duration: 0.3s;\n\n  :nth-child(odd) {\n    margin-right: 0;\n\n    @media (min-width: ${breakpoints.mobileMax}) {\n      margin-right: 4%;\n    }\n  }\n\n  @media (max-width: ${breakpoints.mobileMax}) {\n    width: 100%;\n  }\n`\n\nconst ImageContainer = styled.div`\n  align-items: center;\n  width: 100vw;\n  text-align: center;\n\n  > .gatsby-image-wrapper {\n    width: 70%;\n    margin: 0 auto;\n\n    @media (max-width: ${breakpoints.mobileMax}) {\n      width: 100%;\n    }\n  }\n\n  ${Paragraph} {\n    width: 60%;\n    margin: 0 auto;\n    padding-bottom: 20px;\n\n    @media (max-width: ${breakpoints.mobileMax}) {\n      width: 85%;\n    }\n  }\n`\n\nconst ButtonContainer = styled.div`\n  width: 48%;\n  margin-bottom: 80px;\n  transition-duration: 0.3s;\n\n  :nth-child(odd) {\n    margin-right: 0;\n    margin-bottom: 20px;\n\n    @media (min-width: ${breakpoints.mobileMax}) {\n      margin-right: 4%;\n      margin-bottom: 80px;\n    }\n  }\n\n  @media (max-width: ${breakpoints.mobileMax}) {\n    width: 100%;\n  }\n`\n\nconst WazeParking = ({ data }) => {\n  return (\n    <>\n      <SEO title={`Projects | Parking for Waze`} />\n      <HeroContainer>\n        <HeroSegement>\n          <Img\n            fluid={data.featuredImgFluid.childImageSharp.fluid}\n            style={{ boxShadow: \"0px 4px 10px 0 #dedede\" }}\n            alt=\"Parking for Waze prototype mockup\"\n          />\n        </HeroSegement>\n\n        <HeroSegement>\n          <Heading style={{ marginTop: \"0\" }}>\n            Parking for Waze\n          </Heading>\n          <Paragraph>UX/UI Design - 2021</Paragraph>\n          <RoleTable>\n            <Paragraph>\n              <strong>Responsibilities</strong>\n              <br />\n              User Scenario Mapping\n              <br />\n              User Interviewing/Testing\n              <br />\n              Prototyping\n            </Paragraph>\n            <Paragraph>\n              <strong>Stack</strong>\n              <br />\n              Adobe XD\n              <br />\n              Miro\n            </Paragraph>\n          </RoleTable>\n          <CallToAction>\n            <a\n              href=\"https://xd.adobe.com/view/ffd5838f-bb0b-47c3-81fe-923ad0fc5450-aa86/\"\n              style={{ color: \"#212529\" }}\n            >\n              view prototype\n            </a>\n          </CallToAction>\n        </HeroSegement>\n      </HeroContainer>\n\n      <Layout>\n        <div>\n          <ProjectContainer>\n            <Container>\n              <WorkSubHeading>project overview</WorkSubHeading>\n            </Container>\n\n            <Container>\n              <Paragraph>\n                Waze is a wayfinding app that is hoping to expand into the\n                college campus market. Parking on a college campus adds unique\n                needs and problems that Waze would like to address like traffic,\n                location and capacity of parking, time limits, restrictions, and\n                more. Purdue offers basic parking information on their website\n                such as rules, registration, and a map, but are these truly\n                helpful for campus drivers? For CGT 256 - Principles of UXD at\n                Purdue University, my team and I were tasked to imagine we were\n                helping Waze solve this issue in the college campus market.\n              </Paragraph>\n              <Paragraph>\n                <strong>The Problem</strong>\n                <br />\n                Students <i>THINK</i> there is a lack of spots within close\n                proximity to campus which means there is a lack of spots. And it\n                is <i>VALID</i>. It takes too long to find an open spot in a\n                convenient location, so students risk getting a ticket, being\n                late to class, or opting for online.\n                <br />\n                <br />\n                <strong>The Goal</strong>\n                <br />\n                The main goal of this project is to understand the needs of\n                Purdue University drivers and design a campus parking option in\n                the Waze app. The Waze app already has parking in its\n                functionality, but it is limited and doesn’t meet the unique\n                needs of campus drivers. In order to complete this project,\n                there were various stages including — discovery and exploration,\n                ideation and design, and prototyping and testing.\n              </Paragraph>\n            </Container>\n          </ProjectContainer>\n        </div>\n      </Layout>\n\n      <ImageContainer>\n        <Img\n          fluid={data.icons.childImageSharp.fluid}\n          alt=\"User experience design icons\"\n        />\n      </ImageContainer>\n\n      <Layout>\n        <div>\n          <ProjectContainer>\n            <Container>\n              <WorkSubHeading>discover & explore</WorkSubHeading>\n            </Container>\n\n            <Container>\n              <Paragraph>\n                Before ideating and coming up with a solution for Waze, we\n                needed to understand our representative user group and their\n                problems. The purpose of interviewing drivers on Purdue’s campus\n                is to gain a better understanding of our user’s needs,\n                frustrations, behaviors, and goals. We collected information\n                through five, semi-structured interviews. These interviews\n                helped frame the issues of our users and inform our design\n                decisions based upon research. After conducting interviews, we\n                created a persona to empathize with our users.\n                <br />\n                <br />\n                <strong>Design Requirements:</strong>\n              </Paragraph>\n              <ul style={{ fontFamily: \"Lato\" }}>\n                <li>\n                  Displays parking availability by density (red, yellow, green)\n                </li>\n                <li>\n                  A way to patrol parking locations and state how many spots\n                  there are at a given time\n                </li>\n                <li>Entry for users to state how available a lot is</li>\n                <li>\n                  Maps displaying where to park (lots, garages, street spots)\n                </li>\n                <li>Information about parking time limits (A, B, C passes)</li>\n                <li>\n                  A way to estimate how long it will take someone to find\n                  parking\n                </li>\n              </ul>\n            </Container>\n          </ProjectContainer>\n        </div>\n      </Layout>\n\n      <ImageContainer>\n        <Img\n          fluid={data.wireframe.childImageSharp.fluid}\n          style={{ boxShadow: \"0px 4px 10px 0 #dedede\" }}\n          alt=\"Waze for Parking wireframe\"\n        />\n      </ImageContainer>\n\n      <Layout>\n        <div>\n          <ProjectContainer>\n            <Container>\n              <WorkSubHeading>Ideate & Design</WorkSubHeading>\n            </Container>\n\n            <Container>\n              <Paragraph>\n                After researching our users, their needs, and understanding\n                their frustrations, we want to ideate as many solutions as\n                possible to help alleviate our user’s problems. We utilized the\n                Crazy 8’s method of brainstorming in which we sketched roughly\n                25 ideas, features, or interactions. Once we each brainstormed\n                individually, we came together as a group organized and\n                consolidated our ideas for the best and most feasible solution.\n                <br />\n                <br />\n                Next, we needed to lay out a step-by-step interaction\n                experience. We created four different user scenarios to help\n                discover the flow of screens.\n              </Paragraph>\n              <ol style={{ fontFamily: \"Lato\" }}>\n                <li>\n                  User wants to drive to campus the fastest route, and closest\n                  parking location\n                </li>\n                <li>User navigated to parking location</li>\n                <li>\n                  User chooses a 2-hour timed parking spot rather than a lot or\n                  garage\n                </li>\n                <li>User leave their parking location</li>\n              </ol>\n            </Container>\n          </ProjectContainer>\n        </div>\n      </Layout>\n\n      <ImageContainer>\n        <Img\n          fluid={data.homePage.childImageSharp.fluid}\n          style={{ boxShadow: \"0px 4px 10px 0 #dedede\" }}\n          alt=\"Car Compare homepage mockup\"\n        />\n      </ImageContainer>\n\n      <Layout>\n        <div>\n          <ProjectContainer>\n            <Container>\n              <WorkSubHeading>prototype & test</WorkSubHeading>\n            </Container>\n\n            <Container>\n              <Paragraph>\n                To test our prototypes and iterate on our sketch designs, we\n                conducted two sprints following Google’s sprint methodology. In\n                the first sprint, we conducted a cognitive walkthrough to\n                determine all interactions in a user’s task. After doing so, we\n                could create our first click-through prototype for testing. We\n                tested the prototype with three representatives from our user\n                group and gained mostly positive feedback. However, some changes\n                needed to be made for colors and branding and creating a new\n                input for timed parking. After accounting for these changes, we\n                tested the prototype with the same users and received very\n                positive feedback which resulted in the following final\n                prototype.\n              </Paragraph>\n            </Container>\n          </ProjectContainer>\n        </div>\n      </Layout>\n\n      <ImageContainer>\n        <Img\n          fluid={data.otherPage.childImageSharp.fluid}\n          style={{ boxShadow: \"0px 4px 10px 0 #dedede\" }}\n          alt=\"Car Compare mockups\"\n        />\n      </ImageContainer>\n\n      <Layout>\n        <div>\n          <ProjectContainer>\n            <Container>\n              <WorkSubHeading>lessons learned</WorkSubHeading>\n            </Container>\n\n            <Container>\n              <ul style={{ fontFamily: \"Lato\" }}>\n                <li>\n                  <strong>Simplicity is key.</strong> As a designer, I need to\n                  ensure I’m not designing for myself, but rather the users. We\n                  must always remember “why”. The end goal is to understand the\n                  user, their problems, and come up with a design that helps\n                  them.\n                </li>\n                <li>\n                  <strong>Understand the process.</strong> Within a team, it can\n                  be hard to understand design direction with many differing\n                  opinions. Knowing how to work together and choose what’s best\n                  for the user should be the main focus.\n                </li>\n              </ul>\n            </Container>\n          </ProjectContainer>\n        </div>\n      </Layout>\n\n      <Layout>\n        <WorkSubHeading style={{ marginBottom: \"50px\" }}>\n          More Projects\n        </WorkSubHeading>\n\n        <ProjectContainer>\n          <ButtonContainer>\n            <Button to=\"/CraigslistRedesign\">\n              <Img\n                fluid={data.prevProject.childImageSharp.fluid}\n                style={{ boxShadow: \"0px 4px 10px 0 #dedede\" }}\n                alt=\"YWCA pages\"\n              />\n            </Button>\n          </ButtonContainer>\n\n          <ButtonContainer>\n            <Button to=\"/HankDevelopment\">\n              <Img\n                fluid={data.nextProject.childImageSharp.fluid}\n                style={{ boxShadow: \"0px 4px 10px 0 #dedede\" }}\n                alt=\"Car comparison mockup\"\n              />\n            </Button>\n          </ButtonContainer>\n        </ProjectContainer>\n      </Layout>\n    </>\n  )\n}\n\nexport default WazeParking\n\nexport const query = graphql`\n  query {\n    featuredImgFluid: file(relativePath: { eq: \"mockups/waze_mockup.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 792, maxHeight: 594) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n\n    icons: file(relativePath: { eq: \"uxd-icons.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1008, maxHeight: 360) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n\n    wireframe: file(relativePath: { eq: \"wireframes/waze-ux.jpg\" }) {\n      ...fullPageImages\n    }\n\n    homePage: file(\n      relativePath: { eq: \"full-page/full-mockup/waze_fullpage_mockup.jpg\" }\n    ) {\n      ...fullPageImages\n    }\n\n    otherPage: file(\n      relativePath: { eq: \"full-page/full-mockup/waze_full-page.jpg\" }\n    ) {\n      ...fullPageImages\n    }\n\n    prevProject: file(relativePath: { eq: \"mockups/craigslist_mockup.jpg\" }) {\n      ...otherProjects\n    }\n\n    nextProject: file(\n      relativePath: { eq: \"mockups/hank-development-mockup.jpg\" }\n    ) {\n      ...otherProjects\n    }\n  }\n`\n\nexport const fullPageImages = graphql`\n  fragment fullPageImages on File {\n    childImageSharp {\n      fluid(maxWidth: 1008, maxHeight: 748) {\n        ...GatsbyImageSharpFluid\n      }\n    }\n  }\n`\n\nexport const otherProjects = graphql`\n  fragment otherProjects on File {\n    childImageSharp {\n      fluid(maxWidth: 542, maxHeight: 410) {\n        ...GatsbyImageSharpFluid\n      }\n    }\n  }\n`\n","import styled from \"styled-components/macro\";\nimport \"typeface-lato\"\n\nconst CallToAction =  styled.h3`\n    font-family: \"Lato\";\n    font-weight: 800;\n    font-size: 1.3rem;\n\n    > a {\n        color: #212529;\n    }\n\n    > a:hover {\n        cursor: pointer;\n        text-decoration: none;\n        transition: 0.3s ease;\n    }\n`;\n\nexport default CallToAction;\n"],"sourceRoot":""}