{"version":3,"sources":["webpack:///./src/components/text/CallToAction.js","webpack:///./src/pages/ACNHGenerator.js","webpack:///./src/components/UI/Project/ImageContainer.js"],"names":["CallToAction","styled","a","project","task","first","second","third","tool","projectName","projectCategory","projectYear","link","link2","prevProject","nextProject","ACNHGenerator","data","title","fluid","featuredImgFluid","childImageSharp","style","boxShadow","alt","marginTop","href","wireframe","otherPage","marginBottom","to","query","fullPageImages","otherProjects","ImageContainer","div","breakpoints","mobileMax","Paragraph"],"mappings":"2GAGMA,G,UAAgBC,IAAOC,EAAX,+DAAID,CAAJ,0IAaHD,O,kCChBf,gWAoBMG,EAAU,CACdC,KAAM,CACJC,MAAO,WACPC,OAAQ,YACRC,MAAO,IAETC,KAAM,CACJH,MAAO,QACPC,OAAQ,aACRC,MAAO,aAETE,YAAa,6BACbC,gBAAiB,iBACjBC,YAAa,OACbC,KAAM,uDACNC,MAAO,mJACPC,YAAa,mBACbC,YAAa,kBAkIAC,UA7HO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACE,oCACE,kBAAC,IAAD,CAAKC,MAAK,0CACV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACIC,MAAOF,EAAKG,iBAAiBC,gBAAgBF,MAC7CG,MAAO,CAAEC,UAAW,0BACpBC,IAAQrB,EAAQM,YAAb,aAIT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASa,MAAO,CAAEG,UAAW,MAC1BtB,EAAQM,aAGX,kBAAC,IAAD,KACGN,EAAQO,gBADX,MAC+BP,EAAQQ,aAGvC,kBAAC,IAAD,CACEP,KAAMD,EAAQC,KACdI,KAAML,EAAQK,OAEhB,kBAAC,IAAD,CAAckB,KAAMvB,EAAQS,MAA5B,mBAGA,6BACA,kBAAC,IAAD,CAAcc,KAAMvB,EAAQU,OAA5B,oBAMJ,kBAAC,IAAD,KACE,kBAAC,IAAD,yOAGA,kBAAC,IAAD,CACEM,MAAOF,EAAKU,UAAUN,gBAAgBF,MACtCG,MAAO,CAAEC,UAAW,0BACpBC,IAAQrB,EAAQM,YAAb,gBAIP,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,4BAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,keAGA,kBAAC,IAAD,mEAC6D,uBAAGiB,KAAK,2FAAR,gBAD7D,8QAQR,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEP,MAAOF,EAAKW,UAAUP,gBAAgBF,MACtCG,MAAO,CAAEC,UAAW,0BACpBC,IAAQrB,EAAQM,YAAb,aAIP,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,yBAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,0aAUR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAgBa,MAAO,CAAEG,UAAW,MAAOI,aAAc,SAAzD,iBAIA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAQC,GAAG,gBACP,kBAAC,IAAD,CACEX,MAAOF,EAAKH,YAAYO,gBAAgBF,MACxCG,MAAO,CAAEC,UAAW,0BACpBC,IAAQrB,EAAQW,YAAb,iBAMT,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAQgB,GAAG,kBACP,kBAAC,IAAD,CACEX,MAAOF,EAAKF,YAAYM,gBAAgBF,MACxCG,MAAO,CAAEC,UAAW,0BACpBC,IAAQrB,EAAQY,YAAb,qBAaZ,IAAMgB,EAAK,aAkCLC,EAAc,aAUdC,EAAa,a,0ECjNpBC,EAAiBjC,IAAOkC,IAAV,qEAAGlC,CAAH,6NASKmC,IAAYC,UAKjCC,IAKqBF,IAAYC,WAMtBH","file":"component---src-pages-acnh-generator-js-3447e7bca8f8fbc0e95c.js","sourcesContent":["import styled from \"styled-components/macro\";\nimport \"typeface-lato\"\n\nconst CallToAction =  styled.a`\n    font-family: \"Lato\";\n    font-weight: 800;\n    font-size: 1.3rem;\n    color: #212529;\n\n    :hover {\n        cursor: pointer;\n        text-decoration: none;\n        transition: 0.3s ease;\n    }\n`;\n\nexport default CallToAction;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\nimport Heading from \"../components/text/Heading\"\nimport Paragraph from \"../components/text/Paragraph\"\nimport WorkSubHeading from \"../components/text/WorkSubHeading\"\nimport CallToAction from \"../components/text/CallToAction\"\nimport SEO from \"../components/seo\"\nimport ButtonContainer from '../components/UI/ButtonContainer'\nimport Button from \"../components/UI/Button\"\n\nimport HeroContainer from \"../components/UI/Project/HeroContainer\"\nimport HeroSegment from \"../components/UI/Project/HeroSegment\"\nimport RoleTable from \"../components/UI/Project/RoleTable\"\nimport ProjectContainer from \"../components/UI/Project/ProjectContainer\"\nimport Container from \"../components/UI/Project/Container\"\nimport ImageContainer from \"../components/UI/Project/ImageContainer\"\n\nconst project = {\n  task: {\n    first: 'Designer',\n    second: 'Developer',\n    third: '',\n  },\n  tool: {\n    first: 'Figma',\n    second: 'JavaScript',\n    third: 'Bootstrap',\n  },\n  projectName: 'ACNH Island Name Generator',\n  projectCategory: 'Web Design/Dev',\n  projectYear: '2021',\n  link: 'https://github.com/nicoledwenger/acnh-name-generator',\n  link2: 'https://www.figma.com/proto/tKn7GE1uenmgS2tKSRRgmE/ACNH-Name-Generator?node-id=0%3A1&scaling=min-zoom&page-id=0%3A1&starting-point-node-id=2%3A3',\n  prevProject: 'Parking for Waze',\n  nextProject: 'Tweed Magazine'\n}\n\n\n\nconst ACNHGenerator = ({ data }) => {\n  return (\n    <>\n      <SEO title={`Projects | ACNH Island Name Generator`} />\n      <HeroContainer>\n        <HeroSegment>\n          <Img\n              fluid={data.featuredImgFluid.childImageSharp.fluid}\n              style={{ boxShadow: \"0px 4px 10px 0 #dedede\" }}\n              alt={`${project.projectName} mockup`}\n            />\n        </HeroSegment>\n\n        <HeroSegment>\n          <Heading style={{ marginTop: \"0\" }}>\n            {project.projectName}\n          </Heading>\n\n          <Paragraph>\n            {project.projectCategory} - {project.projectYear}\n          </Paragraph>\n\n          <RoleTable \n            task={project.task}\n            tool={project.tool}\n          />\n          <CallToAction href={project.link}>\n              view repository\n          </CallToAction>\n          <br/>\n          <CallToAction href={project.link2}>\n              view prototype\n          </CallToAction>\n        </HeroSegment>\n      </HeroContainer>\n\n      <ImageContainer>\n        <Paragraph>\n          In the preliminary stages of this project, I first began with a general sketch of elements I wanted in the design. The design greatly resembles elements in Animal Crossing New Horizons, making it a familiar site for players.\n        </Paragraph>\n        <Img\n          fluid={data.wireframe.childImageSharp.fluid}\n          style={{ boxShadow: \"0px 4px 10px 0 #dedede\" }}\n          alt={`${project.projectName} wireframe`}\n        />\n      </ImageContainer>\n\n      <Layout>\n        <div>\n          <ProjectContainer>\n            <Container>\n              <WorkSubHeading>about this project</WorkSubHeading>\n            </Container>\n\n            <Container>\n              <Paragraph>\n                During quarantine, I (like many others) got into playing Animal Crossing: New Horizons. One of the biggest issues I face in this game is creating a name for my island. Islands can only have ten characters and can be a big decision since you can't change it and it can reflect the overall theme of your island. So, I go to the internet for name suggestions. However, a lot of generators are boring and not pleasing to look at, so I wanted to make a more appealing interface. \n              </Paragraph>\n              <Paragraph>\n                I sourced names for this generator from a Tumblr post from <a href=\"https://angiestown.tumblr.com/post/190939140997/animal-crossing-town-name-ideas-updated\">Angie's Town</a>. To build the logic of the generator, I used HTML inputs to toggle word categories and JavaScript to randomly generate a name up to ten characters. Once the overall logic was working, I turned to Figma to create a simple prototype of how the interace will feel.\n              </Paragraph>\n            </Container>\n          </ProjectContainer>\n        </div>\n      </Layout>\n\n      <ImageContainer>\n        <Img\n          fluid={data.otherPage.childImageSharp.fluid}\n          style={{ boxShadow: \"0px 4px 10px 0 #dedede\" }}\n          alt={`${project.projectName} mockup`}\n        />\n      </ImageContainer>\n\n      <Layout>\n        <div>\n          <ProjectContainer>\n            <Container>\n              <WorkSubHeading>project results</WorkSubHeading>\n            </Container>\n\n            <Container>\n              <Paragraph>\n                This project is currently in the development phase. Up to this point, the project has taken two days to implement. While logic is built, I now need to add styling. I plan on using Bootstrap and custom styling where needed. Once the styling is completed, I will deploy the code for public use. Future improvements are to design and develop responsive layouts while still keeping the overall Animal Crossing design.\n              </Paragraph>\n            </Container>\n          </ProjectContainer>\n        </div>\n      </Layout>\n\n      \n\n      <Layout>\n        <WorkSubHeading style={{ marginTop: \"18%\", marginBottom: \"50px\" }}>\n          More Projects\n        </WorkSubHeading>\n\n        <ProjectContainer>\n          <ButtonContainer>\n          <Button to=\"/WazeParking\">\n              <Img\n                fluid={data.prevProject.childImageSharp.fluid}\n                style={{ boxShadow: \"0px 4px 10px 0 #dedede\" }}\n                alt={`${project.prevProject} wireframe`}\n              />\n            </Button>\n          </ButtonContainer>\n            \n\n          <ButtonContainer>\n          <Button to=\"/TweedMagazine\">\n              <Img\n                fluid={data.nextProject.childImageSharp.fluid}\n                style={{ boxShadow: \"0px 4px 10px 0 #dedede\" }}\n                alt={`${project.nextProject} wireframe`}\n              />\n            </Button>\n          </ButtonContainer>\n            \n        </ProjectContainer>\n      </Layout>\n    </>\n  )\n}\n\nexport default ACNHGenerator\n\nexport const query = graphql`\n  query {\n    featuredImgFluid: file(\n      relativePath: { eq: \"mockups/acnh_generator_mockup.jpg\" }\n    ) {\n      childImageSharp {\n        fluid(maxWidth: 792, maxHeight: 594) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n\n    wireframe: file(relativePath: { eq: \"wireframes/acnh_wireframe.jpg\" }) {\n      ...fullPageImages\n    }\n\n    otherPage: file(\n      relativePath: { eq: \"full-page/full-mockup/acnh-collage.png\" }\n    ) {\n      ...fullPageImages\n    }\n\n    prevProject: file(relativePath: { eq: \"mockups/waze_mockup.jpg\" }) {\n      ...otherProjects\n    }\n\n    nextProject: file(\n      relativePath: { eq: \"mockups/tweed_mockup.jpg\" }\n    ) {\n      ...otherProjects\n    }\n  }\n`\n\nexport const fullPageImages = graphql`\n  fragment fullPageImages on File {\n    childImageSharp {\n      fluid(maxWidth: 1008, maxHeight: 748) {\n        ...GatsbyImageSharpFluid\n      }\n    }\n  }\n`\n\nexport const otherProjects = graphql`\n  fragment otherProjects on File {\n    childImageSharp {\n      fluid(maxWidth: 542, maxHeight: 410) {\n        ...GatsbyImageSharpFluid\n      }\n    }\n  }\n`\n","import styled from \"styled-components/macro\";\nimport { breakpoints } from \"../../Breakpoints\";\nimport Paragraph from \"../../Text/Paragraph\"\n\nconst ImageContainer = styled.div`\n  align-items: center;\n  width: 100vw;\n  text-align: center;\n\n  > .gatsby-image-wrapper {\n    width: 70%;\n    margin: 0 auto;\n\n    @media (max-width: ${breakpoints.mobileMax}) {\n      width: 100%;\n    }\n  }\n\n  ${Paragraph} {\n    width: 60%;\n    margin: 0 auto;\n    padding-bottom: 20px;\n\n    @media (max-width: ${breakpoints.mobileMax}) {\n      width: 85%;\n    }\n  }\n`\n\nexport default ImageContainer;"],"sourceRoot":""}